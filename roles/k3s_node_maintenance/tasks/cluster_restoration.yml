---
# Cluster restoration tasks - uncordoning and re-enabling Longhorn
- name: "Uncordoning node: {{ inventory_hostname }}"
  delegate_to: localhost
  kubernetes.core.k8s:
    api_version: v1
    kind: Node
    name: "{{ inventory_hostname }}"
    state: present
    merge_type: strategic-merge
    definition:
      spec:
        unschedulable: false
  tags: [restore, uncordon, resume]

- name: Longhorn node check
  delegate_to: localhost
  kubernetes.core.k8s_info:
    api_version: longhorn.io/v1beta2
    kind: Node
    name: "{{ inventory_hostname }}"
    namespace: longhorn-system
  register: k3s_node_maintenance_longhorn_node_info
  tags: [restore, longhorn, resume]

- name: Set Longhorn scheduling facts
  ansible.builtin.set_fact:
    k3s_node_maintenance_longhorn_node_exists: "{{ k3s_node_maintenance_longhorn_node_info.resources | length > 0 }}"
    k3s_node_maintenance_longhorn_scheduling_disabled: >-
      {{ k3s_node_maintenance_longhorn_node_info.resources | length > 0 and
      k3s_node_maintenance_longhorn_node_info.resources[0].spec.allowScheduling == false }}
  tags: [restore, longhorn, resume]

- name: Re-enabling Longhorn scheduling
  delegate_to: localhost
  kubernetes.core.k8s:
    api_version: longhorn.io/v1beta2
    kind: Node
    name: "{{ inventory_hostname }}"
    namespace: longhorn-system
    state: present
    merge_type: merge
    definition:
      spec:
        allowScheduling: true
  when: k3s_node_maintenance_longhorn_node_exists and k3s_node_maintenance_longhorn_scheduling_disabled
  tags: [restore, longhorn, resume]

- name: Longhorn pod readiness
  delegate_to: localhost
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    field_selectors:
      - spec.nodeName={{ inventory_hostname }}
    namespace: longhorn-system
    wait: true
    wait_condition:
      type: Ready
      status: "True"
    wait_timeout: 120
  when: k3s_node_maintenance_longhorn_node_exists and k3s_node_maintenance_longhorn_scheduling_disabled
  register: k3s_node_maintenance_longhorn_pod_wait
  ignore_errors: true
  tags: [restore, longhorn, resume]

- name: "Restoration complete for: {{ inventory_hostname }}"
  delegate_to: localhost
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
    name: "{{ inventory_hostname }}"
  register: k3s_node_maintenance_final_node_info
  failed_when: k3s_node_maintenance_final_node_info.resources[0].spec.unschedulable | default(false)
  tags: [restore, verify, resume]
