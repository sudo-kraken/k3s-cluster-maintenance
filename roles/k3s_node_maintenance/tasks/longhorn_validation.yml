---
# Longhorn health validation tasks
- name: Check if Longhorn is installed in cluster
  delegate_to: localhost
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Namespace
    name: longhorn-system
  register: k3s_node_maintenance_longhorn_namespace
  tags: [longhorn, health, validation]

- name: Set Longhorn installed fact
  ansible.builtin.set_fact:
    k3s_node_maintenance_longhorn_installed: "{{ k3s_node_maintenance_longhorn_namespace.resources | length > 0 }}"
  tags: [longhorn, health, validation]

- name: Get Longhorn manager pods status (if Longhorn installed)
  delegate_to: localhost
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: longhorn-system
    label_selectors:
      - app=longhorn-manager
  register: k3s_node_maintenance_longhorn_managers
  when: k3s_node_maintenance_longhorn_installed
  tags: [longhorn, health, validation]

- name: Get Longhorn instance manager pods status (if Longhorn installed)
  delegate_to: localhost
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: longhorn-system
    label_selectors:
      - longhorn.io/component=instance-manager
  register: k3s_node_maintenance_longhorn_instance_managers
  when: k3s_node_maintenance_longhorn_installed
  tags: [longhorn, health, validation]

- name: Get Longhorn volumes status (if Longhorn installed)
  delegate_to: localhost
  kubernetes.core.k8s_info:
    api_version: longhorn.io/v1beta2
    kind: Volume
    namespace: longhorn-system
  register: k3s_node_maintenance_longhorn_volumes
  when: k3s_node_maintenance_longhorn_installed
  tags: [longhorn, health, validation]

- name: Set Longhorn health facts
  ansible.builtin.set_fact:
    k3s_node_maintenance_running_managers: >-
      {{ k3s_node_maintenance_longhorn_managers.resources |
      selectattr('status.phase', 'equalto', 'Running') | list | length }}
    k3s_node_maintenance_total_managers: "{{ k3s_node_maintenance_longhorn_managers.resources | length }}"
    k3s_node_maintenance_running_instance_managers: >-
      {{ k3s_node_maintenance_longhorn_instance_managers.resources |
      selectattr('status.phase', 'equalto', 'Running') | list | length }}
    k3s_node_maintenance_total_instance_managers: >-
      {{ k3s_node_maintenance_longhorn_instance_managers.resources | length }}
    k3s_node_maintenance_attached_volumes: >-
      {{ k3s_node_maintenance_longhorn_volumes.resources |
      selectattr('status.state', 'defined') | selectattr('status.state', 'equalto', 'attached') | list | length }}
    k3s_node_maintenance_total_volumes_with_state: >-
      {{ k3s_node_maintenance_longhorn_volumes.resources |
      selectattr('status.state', 'defined') | list | length }}
    k3s_node_maintenance_degraded_volumes: >-
      {{ k3s_node_maintenance_longhorn_volumes.resources |
      selectattr('status.robustness', 'defined') | selectattr('status.robustness', 'equalto', 'degraded') | list | length }}
    k3s_node_maintenance_faulted_volumes: >-
      {{ k3s_node_maintenance_longhorn_volumes.resources |
      selectattr('status.robustness', 'defined') | selectattr('status.robustness', 'equalto', 'faulted') | list | length }}
    k3s_node_maintenance_degraded_volume_list: >-
      {{ k3s_node_maintenance_longhorn_volumes.resources |
      selectattr('status.robustness', 'defined') | selectattr('status.robustness', 'equalto', 'degraded') |
      map(attribute='metadata.name') | list }}
    k3s_node_maintenance_faulted_volume_list: >-
      {{ k3s_node_maintenance_longhorn_volumes.resources |
      selectattr('status.robustness', 'defined') | selectattr('status.robustness', 'equalto', 'faulted') |
      map(attribute='metadata.name') | list }}
  when: k3s_node_maintenance_longhorn_installed
  tags: [longhorn, health, validation]

- name: Longhorn volume health validation
  ansible.builtin.debug:
    msg: |
      Longhorn Volume Health Check:
      {% if (k3s_node_maintenance_degraded_volumes | int > 0) or (k3s_node_maintenance_faulted_volumes | int > 0) -%}
      Degraded: {{ k3s_node_maintenance_degraded_volumes }}, Faulted: {{ k3s_node_maintenance_faulted_volumes }} - waiting
      {% else -%}
      All {{ k3s_node_maintenance_longhorn_volumes.resources | length }} volumes healthy
      {% endif %}
  when: k3s_node_maintenance_longhorn_installed
  tags: [longhorn, health, validation]

- name: Wait for degraded and faulted volumes to recover
  delegate_to: localhost
  kubernetes.core.k8s_info:
    api_version: longhorn.io/v1beta2
    kind: Volume
    namespace: longhorn-system
  register: k3s_node_maintenance_volume_recovery_result
  until: >
    (k3s_node_maintenance_volume_recovery_result.resources |
    selectattr('status.robustness', 'defined') | selectattr('status.robustness', 'equalto', 'degraded') |
    list | length | int == 0) and
    (k3s_node_maintenance_volume_recovery_result.resources |
    selectattr('status.robustness', 'defined') | selectattr('status.robustness', 'equalto', 'faulted') |
    list | length | int == 0)
  retries: 60
  delay: 30
  when:
    - k3s_node_maintenance_longhorn_installed
    - (k3s_node_maintenance_degraded_volumes | int > 0) or (k3s_node_maintenance_faulted_volumes | int > 0)
  failed_when: false
  tags: [longhorn, health, validation, wait]

- name: Show volume recovery progress
  ansible.builtin.debug:
    msg: "Volume recovery progress: {{ k3s_node_maintenance_volume_recovery_result.attempts | default(1) }}/60 checks"
  when:
    - k3s_node_maintenance_longhorn_installed
    - k3s_node_maintenance_volume_recovery_result is defined
    - k3s_node_maintenance_volume_recovery_result.attempts is defined
    - (k3s_node_maintenance_volume_recovery_result.attempts - 1) is divisibleby(5)
  tags: [longhorn, health, validation, wait]

- name: Update final volume health status
  ansible.builtin.set_fact:
    k3s_node_maintenance_final_degraded_count: >-
      {{ k3s_node_maintenance_volume_recovery_result.resources |
      default(k3s_node_maintenance_longhorn_volumes.resources) |
      selectattr('status.robustness', 'defined') | selectattr('status.robustness', 'equalto', 'degraded') |
      list | length }}
    k3s_node_maintenance_final_faulted_count: >-
      {{ k3s_node_maintenance_volume_recovery_result.resources |
      default(k3s_node_maintenance_longhorn_volumes.resources) |
      selectattr('status.robustness', 'defined') | selectattr('status.robustness', 'equalto', 'faulted') |
      list | length }}
    k3s_node_maintenance_final_degraded_list: >-
      {{ k3s_node_maintenance_volume_recovery_result.resources |
      default(k3s_node_maintenance_longhorn_volumes.resources) |
      selectattr('status.robustness', 'defined') | selectattr('status.robustness', 'equalto', 'degraded') |
      map(attribute='metadata.name') | list }}
    k3s_node_maintenance_final_faulted_list: >-
      {{ k3s_node_maintenance_volume_recovery_result.resources |
      default(k3s_node_maintenance_longhorn_volumes.resources) |
      selectattr('status.robustness', 'defined') | selectattr('status.robustness', 'equalto', 'faulted') |
      map(attribute='metadata.name') | list }}
  when: k3s_node_maintenance_longhorn_installed
  tags: [longhorn, health, validation]

- name: Validate volumes are healthy before proceeding
  delegate_to: localhost
  ansible.builtin.fail:
    msg: |
      CRITICAL: Cannot proceed - Longhorn volumes remain unhealthy after 30-minute wait!
      - Degraded volumes: {{ k3s_node_maintenance_final_degraded_count }}
      ({{ k3s_node_maintenance_final_degraded_list | join(', ') if k3s_node_maintenance_final_degraded_list | length > 0 else 'none' }})
      - Faulted volumes: {{ k3s_node_maintenance_final_faulted_count }}
      ({{ k3s_node_maintenance_final_faulted_list | join(', ') if k3s_node_maintenance_final_faulted_list | length > 0 else 'none' }})

      Manual intervention required. Check volume status with:
      kubectl get volumes -n longhorn-system -o wide
  when:
    - k3s_node_maintenance_longhorn_installed
    - (k3s_node_maintenance_final_degraded_count | int > 0) or (k3s_node_maintenance_final_faulted_count | int > 0)
  tags: [longhorn, health, validation]

- name: Final Longhorn system validation
  delegate_to: localhost
  ansible.builtin.assert:
    that:
      - k3s_node_maintenance_running_managers | int == k3s_node_maintenance_total_managers | int
      - k3s_node_maintenance_running_instance_managers | int == k3s_node_maintenance_total_instance_managers | int
      - k3s_node_maintenance_final_degraded_count | int == 0
      - k3s_node_maintenance_final_faulted_count | int == 0
    fail_msg: >-
      Longhorn system validation failed - degraded: {{ k3s_node_maintenance_final_degraded_count }},
      faulted: {{ k3s_node_maintenance_final_faulted_count }}
    success_msg: >-
      Longhorn system healthy - {{ k3s_node_maintenance_total_volumes_with_state }} volumes present,
      all components ready
  when: k3s_node_maintenance_longhorn_installed and (k3s_node_maintenance_total_managers | int > 0)
  tags: [longhorn, health, validation]
