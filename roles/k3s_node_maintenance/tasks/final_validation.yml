---
# Final cluster health validation
- name: Wait for all nodes to be Ready
  delegate_to: localhost
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
    wait: true
    wait_condition:
      type: Ready
      status: "True"
    wait_timeout: 300
  tags: [validation, cluster_health, final]

- name: Validate cluster health
  delegate_to: localhost
  tags: [validation, cluster_health, final]
  block:
    - name: Get all nodes status
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Node
      register: k3s_node_maintenance_all_nodes

    - name: Set cluster health facts
      ansible.builtin.set_fact:
        k3s_node_maintenance_ready_nodes: |
          {%- set ready_count = namespace(value=0) -%}
          {%- for node in k3s_node_maintenance_all_nodes.resources -%}
            {%- for condition in node.status.conditions | default([]) -%}
              {%- if condition.type == "Ready" and condition.status == "True" -%}
                {%- set ready_count.value = ready_count.value + 1 -%}
              {%- endif -%}
            {%- endfor -%}
          {%- endfor -%}
          {{- ready_count.value -}}
        k3s_node_maintenance_total_nodes: "{{ k3s_node_maintenance_all_nodes.resources | length }}"
        k3s_node_maintenance_schedulable_nodes: >-
          {{ k3s_node_maintenance_all_nodes.resources |
          rejectattr('spec.unschedulable', 'defined') | list | length }}

    - name: Validate cluster health
      ansible.builtin.assert:
        that:
          - k3s_node_maintenance_ready_nodes | int == k3s_node_maintenance_total_nodes | int
          - k3s_node_maintenance_schedulable_nodes | int >= (k3s_node_maintenance_total_nodes | int - 1)
        fail_msg: >-
          Cluster validation failed - Ready: {{ k3s_node_maintenance_ready_nodes }}/{{ k3s_node_maintenance_total_nodes }}
        success_msg: "Maintenance complete - {{ inventory_hostname }} updated successfully"
